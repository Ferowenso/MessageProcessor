version: "3"

services:
  postgres:
    image: 'postgres:13.1-alpine'
    container_name: db
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: messages
      POSTGRES_USER: user
      POSTGRES_PASSWORD: user

  zookeeper:
      image: 'bitnami/zookeeper:3'
      ports:
        - '2181:2181'
      volumes:
        - ./data/zookeeper/data:/bitnami
        - ./data/zookeeper/logs:/opt/bitnami/zookeeper/logs
      environment:
        - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
      image: 'wurstmeister/kafka'
      container_name: kafka
      ports:
        - "29092:29092"
      environment:
        - KAFKA_LISTENERS= EXTERNAL_SAME_HOST://:29092,INTERNAL://:9092
        - KAFKA_ADVERTISED_LISTENERS= INTERNAL://kafka:9092,EXTERNAL_SAME_HOST://localhost:29092
        - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP= INTERNAL:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT
        - KAFKA_INTER_BROKER_LISTENER_NAME= INTERNAL
        - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
        - ALLOW_PLAINTEXT_LISTENER=yes
        - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - ./data/kafka/data:/kafka
        - ./data/kafka/logs:/opt/kafka/logs
      depends_on:
        - zookeeper


  message_processor:
      build: .\MessageProcessor
      ports:
        - "8081:8081"
      depends_on:
        - postgres
        - zookeeper
        - kafka
      environment:
        - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/messages
        - SPRING_DATASOURCE_USERNAME=user
        - SPRING_DATASOURCE_PASSWORD=user
        - SPRING_JPA_HIBERNATE_DDL_AUTO=update
        - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
      container_name: message_processor



  weather_sensor:
    build: .\WeatherSensor
    environment:
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
    container_name: weather_sensor

  receipt_generator:
    build: .\ReceiptGenerator
    environment:
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
    container_name: receipt_generator

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro

  grafana:
    image: awesome-grafana:latest
    build:
      context: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    environment:
      GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: "/var/lib/grafana/dashboards/kafka-metrics.json"
    volumes:
      - ./grafana/provisioning/datasources/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - grafana-data:/var/lib/grafana

volumes:
  grafana-data: